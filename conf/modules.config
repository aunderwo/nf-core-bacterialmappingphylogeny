/*
 * --------------------------------------------------
 *  Config file for defining DSL2 per module options
 * --------------------------------------------------
 *
 *   Available keys to override module options:
 *       args           = Additional arguments appended to command in module.
 *       args2          = Second set of arguments appended to command in module (multi-tool modules).
 *       publish_dir    = Directory to publish results.
 *       publish_by_id  = Publish results in separate folders by meta.id value.
 *       publish_files  = Groovy map where key = 'file_ext' and value = 'directory' to publish results for that file extension
 *                        The value of 'directory' is appended to the standard 'publish_dir' path as defined above.
 *                        If publish_files == null (unspecified)  - All files are published.
 *                        If publish_files == false               - No files are published.
 *       suffix         = File name suffix for output files.
 *
 */

params {
    modules {
        'fastp' {
            args              = '--cut_front --cut_tail --trim_poly_x --cut_mean_quality 30 --qualified_quality_phred 30 --unqualified_percent_limit 10 --length_required 50'
            adapter_fasta     = "${baseDir}/assets/adapters.fas"
            publish_files     = ['json':'', 'html':'', 'log': 'log']
        }
        'mash_sketch' {
            args = '-k 32 -m 3'
        }
        'rasusa' {
            args = '--seed 23032021'
        }
        'bwa_index' {
            args = ''
        }
        'bwa_mem' {
            args = ''
            args2 = '-F 4' // samttols view options discarding unmapped reads
            publish_files = false
        }
        'samtools_sort' {
            args = ''
            suffix = '.sorted'
        }
        'samtools_index' {
            args = ''
        }
        'bam_stats' {
            args = ''
        }
        'bcftools_mpileup' {
            args          = '--min-BQ 20 --annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP,FORMAT/SP,INFO/AD,INFO/ADF,INFO/ADR'
            args2         = '--ploidy 1 --multiallelic-caller'
            args3         = ''
            publish_files = false
            publish_dir   = 'variants'
        }
        'bcftools_filter' {
            args = '--soft-filter LowQual --exclude "%QUAL<25 || FORMAT/DP<10 || MAX(FORMAT/ADF)<2 || MAX(FORMAT/ADR)<2 || MAX(FORMAT/AD)/SUM(FORMAT/DP)<0.9 || MQ<30 || MQ0F>0.1" --output-type z'
            suffix = '.filtered'
            publish_dir   = 'variants'
        }
        'gubbins' {
            args = '-v -t hybrid'
        }
        'snpsites' {
            args = ''
        }
        'vcf2pseudogenome' {
            publish_dir = 'pseudogenomes'
        }
        'alignpseudogenomes' {
            non_GATC_threshold = 0.5
            publish_dir = 'pseudogenomes'
        }
        'rapidnj' {
            build = false
            args = '-t d -b 1000 -n'
            publish_dir = 'rapidnj'
        }
        'fasttree' {
            build = false
            args = '-gtr -gamma -fastest'
            publish_dir = 'fasttree'
        }
        'iqtree' {
            build = false
            args = '-bb 1000 -m MFP -czb'
            publish_dir = 'iqtree'
        }
        'raxmlng' {
            build = false
            args = '--model GTR+G --bs-trees 1000'
            publish_dir = 'raxmlng'
        }
        'multiqc' {
            args = ''
        }
    }
}
